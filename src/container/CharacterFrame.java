/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package container;

import app.AppManager;
import constants.Card;
import constants.GUI;
import constants.KEY;
import java.awt.CardLayout;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.JTextComponent;
import util.Ability;
import util.Bundle;

/**
 *
 * @author Kendrick
 */
public class CharacterFrame extends javax.swing.JFrame {

    private AppManager manager;
    /**
     * Creates new form CharacterFrame
     * @param manager
     */
    public CharacterFrame(AppManager manager) {
        if(manager == null){
            throw new NullPointerException("AppManager must not be null");
        }
        this.manager = manager;
        initComponents();
        initCardsForDefense();
        initCardsForSkillsProfs();
        initCardsForSpellsInventory();
        initComponentsForUserInterfacing();
        combo_level.addItemListener(new ComboItemListener(manager));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane = new javax.swing.JScrollPane();
        pan_main = new javax.swing.JPanel();
        pan_charInfo = new javax.swing.JPanel();
        lbl_charInfo = new javax.swing.JLabel();
        bdy_charInfo = new javax.swing.JPanel();
        pan_photo = new javax.swing.JPanel();
        lbl_characterImage = new javax.swing.JLabel();
        pan_biography = new javax.swing.JPanel();
        lbl_charName = new javax.swing.JLabel();
        txt_charName = new javax.swing.JTextField();
        lbl_className = new javax.swing.JLabel();
        txt_class = new javax.swing.JTextField();
        lbl_raceName = new javax.swing.JLabel();
        txt_race = new javax.swing.JTextField();
        lbl_charSize = new javax.swing.JLabel();
        txt_size = new javax.swing.JTextField();
        lbl_charWeight = new javax.swing.JLabel();
        txt_charWeight = new javax.swing.JTextField();
        lbl_charHeight = new javax.swing.JLabel();
        txt_charHeight = new javax.swing.JTextField();
        lbl_deity = new javax.swing.JLabel();
        txt_deity = new javax.swing.JTextField();
        lbl_alignment = new javax.swing.JLabel();
        txt_alignment = new javax.swing.JTextField();
        lbl_level = new javax.swing.JLabel();
        combo_level = new javax.swing.JComboBox<>();
        pan_attributes = new javax.swing.JPanel();
        lbl_panAttributes = new javax.swing.JLabel();
        bdy_attributes = new javax.swing.JPanel();
        pan_strength = new javax.swing.JPanel();
        lbl_strengthTitle = new javax.swing.JLabel();
        pan_strBody = new javax.swing.JPanel();
        txt_strength = new javax.swing.JTextField();
        lbl_strengthModifierTitle = new javax.swing.JLabel();
        lbl_strengthModifier = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        pan_dexterity = new javax.swing.JPanel();
        lbl_dexterityTitle = new javax.swing.JLabel();
        pan_dexBody = new javax.swing.JPanel();
        txt_dexterity = new javax.swing.JTextField();
        lbl_dexterityModifierTitle = new javax.swing.JLabel();
        lbl_dexterityModifier = new javax.swing.JLabel();
        pan_constituion = new javax.swing.JPanel();
        lbl_constitutionTitle = new javax.swing.JLabel();
        pan_conBody = new javax.swing.JPanel();
        txt_constitution = new javax.swing.JTextField();
        lbl_constitutionModifierTitle = new javax.swing.JLabel();
        lbl_constitutionModifier = new javax.swing.JLabel();
        pan_intelligence = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        txt_intelligence = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        lbl_intelligence_modifier = new javax.swing.JLabel();
        pan_wisdom = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        txt_wisdom = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        lbl_wisdom_modifier = new javax.swing.JLabel();
        pan_charisma = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        txt_charisma = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        lbl_charisma_modifier = new javax.swing.JLabel();
        pan_combat = new javax.swing.JPanel();
        lbl_panCombat = new javax.swing.JLabel();
        pan_combatBody = new javax.swing.JPanel();
        pan_offense = new javax.swing.JPanel();
        lbl_offenseTitle = new javax.swing.JLabel();
        pan_offenseBody = new javax.swing.JPanel();
        lbl_weapon_name = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_weapon_name = new javax.swing.JTextArea();
        lbl_damage_roll = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txt_weapon_damage_roll = new javax.swing.JTextArea();
        lbl_damage_type = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        txt_weapon_damage_type = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        lbl_damage_type1 = new javax.swing.JLabel();
        lbl_dmg_bonus_total = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        lbl_dmg_str_bonus = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txt_weapon_damage_bonus = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        lbl_damage_type3 = new javax.swing.JLabel();
        lbl_attk_bonus_total = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        lbl_attk_str_bonus = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txt_weapon_attk_bonus = new javax.swing.JTextField();
        pan_defense = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        defense_title = new javax.swing.JPanel();
        defense_switch_right = new javax.swing.JButton();
        defense_switch_left = new javax.swing.JButton();
        lbl_deck_defense_name = new javax.swing.JLabel();
        deck_defense = new javax.swing.JPanel();
        pan_utility = new javax.swing.JPanel();
        lbl_util_title = new javax.swing.JLabel();
        pan_util_body = new javax.swing.JPanel();
        pan_speed = new javax.swing.JPanel();
        lbl_speed_name = new javax.swing.JLabel();
        lbl_speed_base_title = new javax.swing.JLabel();
        lbl_plus_sign = new javax.swing.JLabel();
        lbl_speed_bonus_title = new javax.swing.JLabel();
        lbl_speed_total = new javax.swing.JLabel();
        lbl_speed_base = new javax.swing.JLabel();
        lbl_plus_sign2 = new javax.swing.JLabel();
        txt_speed_bonus = new javax.swing.JTextField();
        pan_pass_perception = new javax.swing.JPanel();
        lbl_passive_perception_name = new javax.swing.JLabel();
        lbl_passive_perception = new javax.swing.JLabel();
        pan_initiative = new javax.swing.JPanel();
        lbl_init_name = new javax.swing.JLabel();
        lbl_dex_bonus_title = new javax.swing.JLabel();
        lbl_plus_sign_3 = new javax.swing.JLabel();
        lbl_init_bonus_title = new javax.swing.JLabel();
        lbl_init_total = new javax.swing.JLabel();
        lbl_init_dex_bonus = new javax.swing.JLabel();
        lbl_plus_sign4 = new javax.swing.JLabel();
        txt_init_bonus = new javax.swing.JTextField();
        pan_health = new javax.swing.JPanel();
        lbl_health_title = new javax.swing.JLabel();
        pan_health_body = new javax.swing.JPanel();
        lbl_health_points_title = new javax.swing.JLabel();
        txt_health_points = new javax.swing.JTextField();
        lbl_hit_die_title = new javax.swing.JLabel();
        txt_hit_die = new javax.swing.JTextField();
        pan_skills = new javax.swing.JPanel();
        lbl_panSkillsProfs = new javax.swing.JLabel();
        bdy_skills_swap = new javax.swing.JPanel();
        lbl_currSkilsProfsName = new javax.swing.JLabel();
        btn_skills_right = new javax.swing.JButton();
        btn_skills_left = new javax.swing.JButton();
        deck_skillsProfs = new javax.swing.JPanel();
        pan_features = new javax.swing.JPanel();
        lbl_panFeatures = new javax.swing.JLabel();
        bdy_features = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        pan_spellsInventory = new javax.swing.JPanel();
        lbl_panSpellsAndEquipment = new javax.swing.JLabel();
        bdy_spellsAndEquipment = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lbl_deck_spells_name = new javax.swing.JLabel();
        swap_spellbook = new javax.swing.JButton();
        swap_inventory = new javax.swing.JButton();
        deck_spellsInventory = new javax.swing.JPanel();
        pan_background = new javax.swing.JPanel();
        lbl_panBackground = new javax.swing.JLabel();
        bdy_background = new javax.swing.JPanel();
        lbl_background_name = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_background_name = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        lbl_pers_trait = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_pers_trait = new javax.swing.JTextArea();
        jPanel10 = new javax.swing.JPanel();
        lbl_pers_ideal = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        txt_pers_ideal = new javax.swing.JTextArea();
        jPanel12 = new javax.swing.JPanel();
        lbl_pers_bond = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        txt_pers_bond = new javax.swing.JTextArea();
        jPanel14 = new javax.swing.JPanel();
        lbl_pers_flaw = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        txt_pers_flaw = new javax.swing.JTextArea();
        menu_bar = new javax.swing.JMenuBar();
        menu_file = new javax.swing.JMenu();
        item_new = new javax.swing.JMenuItem();
        item_open = new javax.swing.JMenuItem();
        item_save = new javax.swing.JMenuItem();
        menu_edit = new javax.swing.JMenu();
        menu_tools = new javax.swing.JMenu();
        item_options = new javax.swing.JMenuItem();
        menu_help = new javax.swing.JMenu();
        item_about = new javax.swing.JMenuItem();
        item_guide = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DND Character Sheet Editor");
        setResizable(false);
        setSize(new java.awt.Dimension(0, 0));

        scrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        pan_main.setBackground(new java.awt.Color(204, 204, 204));
        pan_main.setMaximumSize(new java.awt.Dimension(800, 1200));
        pan_main.setMinimumSize(new java.awt.Dimension(800, 1190));
        pan_main.setPreferredSize(new java.awt.Dimension(800, 1200));
        pan_main.setRequestFocusEnabled(false);

        pan_charInfo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pan_charInfo.setMaximumSize(new java.awt.Dimension(200, 420));
        pan_charInfo.setLayout(new java.awt.BorderLayout());

        lbl_charInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_charInfo.setText("Character Information");
        lbl_charInfo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lbl_charInfo.setPreferredSize(new java.awt.Dimension(120, 18));
        pan_charInfo.add(lbl_charInfo, java.awt.BorderLayout.PAGE_START);

        pan_photo.setLayout(new java.awt.BorderLayout());

        lbl_characterImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_characterImage.setText("Set Your Character Photo...");
        lbl_characterImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_characterImageMouseClicked(evt);
            }
        });
        pan_photo.add(lbl_characterImage, java.awt.BorderLayout.CENTER);

        pan_biography.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pan_biography.setLayout(new java.awt.GridLayout(9, 2, -72, 0));

        lbl_charName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_charName.setText(" Name");
        lbl_charName.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        pan_biography.add(lbl_charName);

        txt_charName.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        pan_biography.add(txt_charName);

        lbl_className.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_className.setText(" Class");
        lbl_className.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        pan_biography.add(lbl_className);

        txt_class.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        pan_biography.add(txt_class);

        lbl_raceName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_raceName.setText(" Race");
        lbl_raceName.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        pan_biography.add(lbl_raceName);

        txt_race.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        pan_biography.add(txt_race);

        lbl_charSize.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_charSize.setText(" Size");
        lbl_charSize.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        pan_biography.add(lbl_charSize);

        txt_size.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        pan_biography.add(txt_size);

        lbl_charWeight.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_charWeight.setText(" Weight");
        lbl_charWeight.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        pan_biography.add(lbl_charWeight);

        txt_charWeight.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        pan_biography.add(txt_charWeight);

        lbl_charHeight.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_charHeight.setText(" Height");
        lbl_charHeight.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        pan_biography.add(lbl_charHeight);

        txt_charHeight.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        pan_biography.add(txt_charHeight);

        lbl_deity.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_deity.setText(" Deity");
        lbl_deity.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        pan_biography.add(lbl_deity);

        txt_deity.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        pan_biography.add(txt_deity);

        lbl_alignment.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_alignment.setText(" Alignment");
        lbl_alignment.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        pan_biography.add(lbl_alignment);

        txt_alignment.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        pan_biography.add(txt_alignment);

        lbl_level.setText("Level");
        pan_biography.add(lbl_level);

        combo_level.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" }));
        combo_level.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combo_levelItemStateChanged(evt);
            }
        });
        combo_level.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_levelActionPerformed(evt);
            }
        });
        pan_biography.add(combo_level);

        javax.swing.GroupLayout bdy_charInfoLayout = new javax.swing.GroupLayout(bdy_charInfo);
        bdy_charInfo.setLayout(bdy_charInfoLayout);
        bdy_charInfoLayout.setHorizontalGroup(
            bdy_charInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pan_photo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(pan_biography, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        bdy_charInfoLayout.setVerticalGroup(
            bdy_charInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bdy_charInfoLayout.createSequentialGroup()
                .addComponent(pan_photo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pan_biography, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pan_charInfo.add(bdy_charInfo, java.awt.BorderLayout.CENTER);

        pan_attributes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pan_attributes.setMaximumSize(new java.awt.Dimension(550, 150));
        pan_attributes.setLayout(new java.awt.BorderLayout());

        lbl_panAttributes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_panAttributes.setText("Attributes");
        lbl_panAttributes.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pan_attributes.add(lbl_panAttributes, java.awt.BorderLayout.PAGE_START);

        bdy_attributes.setLayout(new java.awt.GridLayout(1, 6));

        pan_strength.setLayout(new java.awt.GridLayout(6, 1));

        lbl_strengthTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_strengthTitle.setText("Strength");
        pan_strength.add(lbl_strengthTitle);

        pan_strBody.setLayout(new java.awt.BorderLayout());

        txt_strength.setColumns(4);
        txt_strength.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_strength.setText("10");
        pan_strBody.add(txt_strength, java.awt.BorderLayout.CENTER);

        pan_strength.add(pan_strBody);

        lbl_strengthModifierTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_strengthModifierTitle.setText("Modifier");
        pan_strength.add(lbl_strengthModifierTitle);

        lbl_strengthModifier.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_strengthModifier.setText("+0");
        pan_strength.add(lbl_strengthModifier);

        jCheckBox1.setText("Save Prof");
        pan_strength.add(jCheckBox1);

        jLabel2.setText("+0");
        pan_strength.add(jLabel2);

        bdy_attributes.add(pan_strength);

        pan_dexterity.setLayout(new java.awt.GridLayout(4, 3));

        lbl_dexterityTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_dexterityTitle.setText("Dexterity");
        pan_dexterity.add(lbl_dexterityTitle);

        txt_dexterity.setColumns(4);
        txt_dexterity.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_dexterity.setText("10");

        javax.swing.GroupLayout pan_dexBodyLayout = new javax.swing.GroupLayout(pan_dexBody);
        pan_dexBody.setLayout(pan_dexBodyLayout);
        pan_dexBodyLayout.setHorizontalGroup(
            pan_dexBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan_dexBodyLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(txt_dexterity, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pan_dexBodyLayout.setVerticalGroup(
            pan_dexBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txt_dexterity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pan_dexterity.add(pan_dexBody);

        lbl_dexterityModifierTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_dexterityModifierTitle.setText("Modifier");
        pan_dexterity.add(lbl_dexterityModifierTitle);

        lbl_dexterityModifier.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_dexterityModifier.setText("+0");
        pan_dexterity.add(lbl_dexterityModifier);

        bdy_attributes.add(pan_dexterity);

        pan_constituion.setLayout(new java.awt.GridLayout(4, 3));

        lbl_constitutionTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_constitutionTitle.setText("Constituion");
        pan_constituion.add(lbl_constitutionTitle);

        txt_constitution.setColumns(4);
        txt_constitution.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_constitution.setText("10");

        javax.swing.GroupLayout pan_conBodyLayout = new javax.swing.GroupLayout(pan_conBody);
        pan_conBody.setLayout(pan_conBodyLayout);
        pan_conBodyLayout.setHorizontalGroup(
            pan_conBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan_conBodyLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(txt_constitution, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pan_conBodyLayout.setVerticalGroup(
            pan_conBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txt_constitution, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pan_constituion.add(pan_conBody);

        lbl_constitutionModifierTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_constitutionModifierTitle.setText("Modifier");
        pan_constituion.add(lbl_constitutionModifierTitle);

        lbl_constitutionModifier.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_constitutionModifier.setText("+0");
        pan_constituion.add(lbl_constitutionModifier);

        bdy_attributes.add(pan_constituion);

        pan_intelligence.setLayout(new java.awt.GridLayout(4, 3));

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Intelligence");
        pan_intelligence.add(jLabel13);

        txt_intelligence.setColumns(4);
        txt_intelligence.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_intelligence.setText("10");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(txt_intelligence, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txt_intelligence, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pan_intelligence.add(jPanel13);

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Modifier");
        pan_intelligence.add(jLabel14);

        lbl_intelligence_modifier.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_intelligence_modifier.setText("+0");
        pan_intelligence.add(lbl_intelligence_modifier);

        bdy_attributes.add(pan_intelligence);

        pan_wisdom.setLayout(new java.awt.GridLayout(4, 3));

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Wisdom");
        pan_wisdom.add(jLabel16);

        txt_wisdom.setColumns(4);
        txt_wisdom.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_wisdom.setText("10");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(txt_wisdom, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txt_wisdom, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pan_wisdom.add(jPanel15);

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Modifier");
        pan_wisdom.add(jLabel17);

        lbl_wisdom_modifier.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_wisdom_modifier.setText("+0");
        pan_wisdom.add(lbl_wisdom_modifier);

        bdy_attributes.add(pan_wisdom);

        pan_charisma.setLayout(new java.awt.GridLayout(4, 3));

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Charisma");
        pan_charisma.add(jLabel19);

        txt_charisma.setColumns(4);
        txt_charisma.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_charisma.setText("10");

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(txt_charisma, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txt_charisma, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pan_charisma.add(jPanel17);

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Modifier");
        pan_charisma.add(jLabel20);

        lbl_charisma_modifier.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_charisma_modifier.setText("+0");
        pan_charisma.add(lbl_charisma_modifier);

        bdy_attributes.add(pan_charisma);

        pan_attributes.add(bdy_attributes, java.awt.BorderLayout.CENTER);

        pan_combat.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pan_combat.setMaximumSize(new java.awt.Dimension(550, 260));
        pan_combat.setLayout(new java.awt.BorderLayout());

        lbl_panCombat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_panCombat.setText("Combat & Utility");
        lbl_panCombat.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pan_combat.add(lbl_panCombat, java.awt.BorderLayout.PAGE_START);

        pan_combatBody.setLayout(new java.awt.GridLayout(1, 3));

        pan_offense.setLayout(new java.awt.BorderLayout());

        lbl_offenseTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_offenseTitle.setText("Offensive");
        lbl_offenseTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pan_offense.add(lbl_offenseTitle, java.awt.BorderLayout.PAGE_START);

        pan_offenseBody.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pan_offenseBody.setLayout(new java.awt.GridLayout(5, 2));

        lbl_weapon_name.setText("Weapon Name");
        pan_offenseBody.add(lbl_weapon_name);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        txt_weapon_name.setColumns(20);
        txt_weapon_name.setLineWrap(true);
        txt_weapon_name.setRows(5);
        jScrollPane1.setViewportView(txt_weapon_name);

        pan_offenseBody.add(jScrollPane1);

        lbl_damage_roll.setText("Damage Roll");
        pan_offenseBody.add(lbl_damage_roll);

        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane5.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        txt_weapon_damage_roll.setColumns(20);
        txt_weapon_damage_roll.setLineWrap(true);
        txt_weapon_damage_roll.setRows(5);
        jScrollPane5.setViewportView(txt_weapon_damage_roll);

        pan_offenseBody.add(jScrollPane5);

        lbl_damage_type.setText("Damage Type");
        pan_offenseBody.add(lbl_damage_type);

        jScrollPane7.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane7.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        txt_weapon_damage_type.setColumns(20);
        txt_weapon_damage_type.setLineWrap(true);
        txt_weapon_damage_type.setRows(5);
        jScrollPane7.setViewportView(txt_weapon_damage_type);

        pan_offenseBody.add(jScrollPane7);

        jPanel2.setLayout(new java.awt.BorderLayout());

        lbl_damage_type1.setText("Damage Bonus");
        jPanel2.add(lbl_damage_type1, java.awt.BorderLayout.PAGE_START);

        lbl_dmg_bonus_total.setText("Total = 0");
        jPanel2.add(lbl_dmg_bonus_total, java.awt.BorderLayout.PAGE_END);

        pan_offenseBody.add(jPanel2);

        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.X_AXIS));

        jPanel11.setLayout(new javax.swing.BoxLayout(jPanel11, javax.swing.BoxLayout.X_AXIS));

        jPanel20.setLayout(new java.awt.BorderLayout());

        jLabel9.setText("STR");
        jPanel20.add(jLabel9, java.awt.BorderLayout.PAGE_START);

        lbl_dmg_str_bonus.setText("0");
        jPanel20.add(lbl_dmg_str_bonus, java.awt.BorderLayout.CENTER);

        jPanel11.add(jPanel20);

        jPanel21.setLayout(new java.awt.BorderLayout());

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Extra");
        jPanel21.add(jLabel11, java.awt.BorderLayout.PAGE_START);

        txt_weapon_damage_bonus.setText("0");
        jPanel21.add(txt_weapon_damage_bonus, java.awt.BorderLayout.CENTER);

        jPanel11.add(jPanel21);

        jPanel5.add(jPanel11);

        pan_offenseBody.add(jPanel5);

        jPanel7.setLayout(new java.awt.BorderLayout());

        lbl_damage_type3.setText("Attack  Bonus");
        jPanel7.add(lbl_damage_type3, java.awt.BorderLayout.PAGE_START);

        lbl_attk_bonus_total.setText("Total = 0");
        jPanel7.add(lbl_attk_bonus_total, java.awt.BorderLayout.PAGE_END);

        pan_offenseBody.add(jPanel7);

        jPanel8.setLayout(new javax.swing.BoxLayout(jPanel8, javax.swing.BoxLayout.X_AXIS));

        jPanel18.setLayout(new java.awt.BorderLayout());

        jLabel6.setText("STR");
        jPanel18.add(jLabel6, java.awt.BorderLayout.PAGE_START);

        lbl_attk_str_bonus.setText("0");
        jPanel18.add(lbl_attk_str_bonus, java.awt.BorderLayout.CENTER);

        jPanel8.add(jPanel18);

        jPanel19.setLayout(new java.awt.BorderLayout());

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Extra");
        jPanel19.add(jLabel7, java.awt.BorderLayout.PAGE_START);

        txt_weapon_attk_bonus.setText("0");
        jPanel19.add(txt_weapon_attk_bonus, java.awt.BorderLayout.CENTER);

        jPanel8.add(jPanel19);

        pan_offenseBody.add(jPanel8);

        pan_offense.add(pan_offenseBody, java.awt.BorderLayout.CENTER);

        pan_combatBody.add(pan_offense);

        pan_defense.setLayout(new java.awt.BorderLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.BorderLayout());

        defense_title.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        defense_title.setLayout(new java.awt.BorderLayout());

        defense_switch_right.setText(">");
        defense_switch_right.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defense_switch_rightActionPerformed(evt);
            }
        });
        defense_title.add(defense_switch_right, java.awt.BorderLayout.LINE_END);

        defense_switch_left.setText("<");
        defense_switch_left.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defense_switch_leftActionPerformed(evt);
            }
        });
        defense_title.add(defense_switch_left, java.awt.BorderLayout.LINE_START);

        lbl_deck_defense_name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_deck_defense_name.setText("Defense");
        defense_title.add(lbl_deck_defense_name, java.awt.BorderLayout.CENTER);

        jPanel3.add(defense_title, java.awt.BorderLayout.PAGE_START);

        deck_defense.setLayout(new java.awt.CardLayout());
        jPanel3.add(deck_defense, java.awt.BorderLayout.CENTER);

        pan_defense.add(jPanel3, java.awt.BorderLayout.CENTER);

        pan_combatBody.add(pan_defense);

        pan_utility.setLayout(new java.awt.BorderLayout());

        lbl_util_title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_util_title.setText("Utility and Survival");
        lbl_util_title.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pan_utility.add(lbl_util_title, java.awt.BorderLayout.PAGE_START);

        pan_util_body.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pan_util_body.setLayout(new javax.swing.BoxLayout(pan_util_body, javax.swing.BoxLayout.Y_AXIS));

        pan_speed.setLayout(new java.awt.GridLayout(2, 4));

        lbl_speed_name.setText("Speed ");
        pan_speed.add(lbl_speed_name);

        lbl_speed_base_title.setText("= Base");
        pan_speed.add(lbl_speed_base_title);

        lbl_plus_sign.setText("+");
        pan_speed.add(lbl_plus_sign);

        lbl_speed_bonus_title.setText("Bonus");
        pan_speed.add(lbl_speed_bonus_title);

        lbl_speed_total.setText("30");
        pan_speed.add(lbl_speed_total);

        lbl_speed_base.setText("30");
        pan_speed.add(lbl_speed_base);

        lbl_plus_sign2.setText("+");
        pan_speed.add(lbl_plus_sign2);

        txt_speed_bonus.setText("0");
        txt_speed_bonus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_speed_bonusActionPerformed(evt);
            }
        });
        pan_speed.add(txt_speed_bonus);

        pan_util_body.add(pan_speed);

        pan_pass_perception.setLayout(new java.awt.BorderLayout());

        lbl_passive_perception_name.setText("Passive Perception");
        pan_pass_perception.add(lbl_passive_perception_name, java.awt.BorderLayout.LINE_START);

        lbl_passive_perception.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_passive_perception.setText("10");
        pan_pass_perception.add(lbl_passive_perception, java.awt.BorderLayout.CENTER);

        pan_util_body.add(pan_pass_perception);

        pan_initiative.setLayout(new java.awt.GridLayout(2, 4));

        lbl_init_name.setText("Initiative");
        pan_initiative.add(lbl_init_name);

        lbl_dex_bonus_title.setText("= Dex");
        pan_initiative.add(lbl_dex_bonus_title);

        lbl_plus_sign_3.setText("+");
        pan_initiative.add(lbl_plus_sign_3);

        lbl_init_bonus_title.setText("Bonus");
        pan_initiative.add(lbl_init_bonus_title);

        lbl_init_total.setText("0");
        pan_initiative.add(lbl_init_total);

        lbl_init_dex_bonus.setText("0");
        pan_initiative.add(lbl_init_dex_bonus);

        lbl_plus_sign4.setText("+");
        pan_initiative.add(lbl_plus_sign4);

        txt_init_bonus.setText("0");
        txt_init_bonus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_init_bonusActionPerformed(evt);
            }
        });
        pan_initiative.add(txt_init_bonus);

        pan_util_body.add(pan_initiative);

        pan_health.setLayout(new java.awt.BorderLayout());

        lbl_health_title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_health_title.setText("Health");
        lbl_health_title.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pan_health.add(lbl_health_title, java.awt.BorderLayout.PAGE_START);

        pan_health_body.setLayout(new java.awt.GridLayout(2, 2));

        lbl_health_points_title.setText("Health Points");
        pan_health_body.add(lbl_health_points_title);

        txt_health_points.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_health_pointsActionPerformed(evt);
            }
        });
        pan_health_body.add(txt_health_points);

        lbl_hit_die_title.setText("Hit Die");
        pan_health_body.add(lbl_hit_die_title);
        pan_health_body.add(txt_hit_die);

        pan_health.add(pan_health_body, java.awt.BorderLayout.CENTER);

        pan_util_body.add(pan_health);

        pan_utility.add(pan_util_body, java.awt.BorderLayout.CENTER);

        pan_combatBody.add(pan_utility);

        pan_combat.add(pan_combatBody, java.awt.BorderLayout.CENTER);

        pan_skills.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pan_skills.setMaximumSize(new java.awt.Dimension(200, 420));
        pan_skills.setLayout(new java.awt.BorderLayout());

        lbl_panSkillsProfs.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_panSkillsProfs.setText("Skills & Proficiencies");
        lbl_panSkillsProfs.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pan_skills.add(lbl_panSkillsProfs, java.awt.BorderLayout.PAGE_START);

        bdy_skills_swap.setLayout(new java.awt.BorderLayout());

        lbl_currSkilsProfsName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_currSkilsProfsName.setText("Current Panel: Skills");
        lbl_currSkilsProfsName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bdy_skills_swap.add(lbl_currSkilsProfsName, java.awt.BorderLayout.CENTER);

        btn_skills_right.setText(">");
        btn_skills_right.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_skills_rightActionPerformed(evt);
            }
        });
        bdy_skills_swap.add(btn_skills_right, java.awt.BorderLayout.LINE_END);

        btn_skills_left.setText("<");
        btn_skills_left.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_skills_leftActionPerformed(evt);
            }
        });
        bdy_skills_swap.add(btn_skills_left, java.awt.BorderLayout.LINE_START);

        pan_skills.add(bdy_skills_swap, java.awt.BorderLayout.PAGE_END);

        deck_skillsProfs.setLayout(new java.awt.CardLayout());
        pan_skills.add(deck_skillsProfs, java.awt.BorderLayout.CENTER);

        pan_features.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pan_features.setMaximumSize(new java.awt.Dimension(550, 420));
        pan_features.setLayout(new java.awt.BorderLayout());

        lbl_panFeatures.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_panFeatures.setText("Feats, Features, and Languages");
        lbl_panFeatures.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pan_features.add(lbl_panFeatures, java.awt.BorderLayout.PAGE_START);

        bdy_features.setLayout(new java.awt.BorderLayout());

        jTextArea3.setColumns(20);
        jTextArea3.setLineWrap(true);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        bdy_features.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        pan_features.add(bdy_features, java.awt.BorderLayout.CENTER);

        pan_spellsInventory.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pan_spellsInventory.setMaximumSize(new java.awt.Dimension(540, 320));
        pan_spellsInventory.setLayout(new java.awt.BorderLayout());

        lbl_panSpellsAndEquipment.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_panSpellsAndEquipment.setText("Spellbook and Inventory");
        lbl_panSpellsAndEquipment.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pan_spellsInventory.add(lbl_panSpellsAndEquipment, java.awt.BorderLayout.PAGE_START);

        bdy_spellsAndEquipment.setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.BorderLayout());

        lbl_deck_spells_name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_deck_spells_name.setText("Spells");
        jPanel1.add(lbl_deck_spells_name, java.awt.BorderLayout.CENTER);

        swap_spellbook.setText("Spellbook");
        swap_spellbook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                swap_spellbookActionPerformed(evt);
            }
        });
        jPanel1.add(swap_spellbook, java.awt.BorderLayout.LINE_START);

        swap_inventory.setText("Inventory");
        swap_inventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                swap_inventoryActionPerformed(evt);
            }
        });
        jPanel1.add(swap_inventory, java.awt.BorderLayout.LINE_END);

        bdy_spellsAndEquipment.add(jPanel1, java.awt.BorderLayout.PAGE_END);

        deck_spellsInventory.setLayout(new java.awt.CardLayout());
        bdy_spellsAndEquipment.add(deck_spellsInventory, java.awt.BorderLayout.CENTER);

        pan_spellsInventory.add(bdy_spellsAndEquipment, java.awt.BorderLayout.CENTER);

        pan_background.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pan_background.setLayout(new java.awt.BorderLayout());

        lbl_panBackground.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_panBackground.setText("Background");
        lbl_panBackground.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pan_background.add(lbl_panBackground, java.awt.BorderLayout.PAGE_START);

        bdy_background.setLayout(new javax.swing.BoxLayout(bdy_background, javax.swing.BoxLayout.Y_AXIS));

        lbl_background_name.setLayout(new javax.swing.BoxLayout(lbl_background_name, javax.swing.BoxLayout.LINE_AXIS));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Name");
        lbl_background_name.add(jLabel1);

        txt_background_name.setColumns(16);
        lbl_background_name.add(txt_background_name);

        bdy_background.add(lbl_background_name);

        jPanel9.setLayout(new java.awt.BorderLayout());

        lbl_pers_trait.setText("Personality Trait");
        jPanel9.add(lbl_pers_trait, java.awt.BorderLayout.PAGE_START);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        txt_pers_trait.setColumns(20);
        txt_pers_trait.setLineWrap(true);
        txt_pers_trait.setRows(2);
        jScrollPane2.setViewportView(txt_pers_trait);

        jPanel9.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        bdy_background.add(jPanel9);

        jPanel10.setLayout(new java.awt.BorderLayout());

        lbl_pers_ideal.setText("Ideal");
        jPanel10.add(lbl_pers_ideal, java.awt.BorderLayout.PAGE_START);

        jScrollPane8.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        txt_pers_ideal.setColumns(20);
        txt_pers_ideal.setLineWrap(true);
        txt_pers_ideal.setRows(2);
        jScrollPane8.setViewportView(txt_pers_ideal);

        jPanel10.add(jScrollPane8, java.awt.BorderLayout.CENTER);

        bdy_background.add(jPanel10);

        jPanel12.setLayout(new java.awt.BorderLayout());

        lbl_pers_bond.setText("Bond");
        jPanel12.add(lbl_pers_bond, java.awt.BorderLayout.PAGE_START);

        jScrollPane9.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        txt_pers_bond.setColumns(20);
        txt_pers_bond.setLineWrap(true);
        txt_pers_bond.setRows(2);
        jScrollPane9.setViewportView(txt_pers_bond);

        jPanel12.add(jScrollPane9, java.awt.BorderLayout.CENTER);

        bdy_background.add(jPanel12);

        jPanel14.setLayout(new java.awt.BorderLayout());

        lbl_pers_flaw.setText("Flaw");
        jPanel14.add(lbl_pers_flaw, java.awt.BorderLayout.PAGE_START);

        jScrollPane10.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        txt_pers_flaw.setColumns(20);
        txt_pers_flaw.setLineWrap(true);
        txt_pers_flaw.setRows(2);
        jScrollPane10.setViewportView(txt_pers_flaw);

        jPanel14.add(jScrollPane10, java.awt.BorderLayout.CENTER);

        bdy_background.add(jPanel14);

        pan_background.add(bdy_background, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout pan_mainLayout = new javax.swing.GroupLayout(pan_main);
        pan_main.setLayout(pan_mainLayout);
        pan_mainLayout.setHorizontalGroup(
            pan_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan_mainLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pan_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pan_mainLayout.createSequentialGroup()
                        .addComponent(pan_charInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(pan_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pan_attributes, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pan_combat, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pan_mainLayout.createSequentialGroup()
                        .addComponent(pan_skills, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(pan_features, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pan_mainLayout.createSequentialGroup()
                        .addComponent(pan_spellsInventory, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(pan_background, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        pan_mainLayout.setVerticalGroup(
            pan_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pan_mainLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pan_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pan_charInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pan_mainLayout.createSequentialGroup()
                        .addComponent(pan_attributes, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(pan_combat, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(pan_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pan_skills, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pan_features, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(pan_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pan_spellsInventory, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pan_background, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        scrollPane.setViewportView(pan_main);

        getContentPane().add(scrollPane, java.awt.BorderLayout.CENTER);

        menu_file.setText("File");

        item_new.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        item_new.setText("New...");
        item_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item_newActionPerformed(evt);
            }
        });
        menu_file.add(item_new);

        item_open.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        item_open.setText("Open...");
        item_open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item_openActionPerformed(evt);
            }
        });
        menu_file.add(item_open);

        item_save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        item_save.setText("Save...");
        menu_file.add(item_save);

        menu_bar.add(menu_file);

        menu_edit.setText("Edit");
        menu_bar.add(menu_edit);

        menu_tools.setText("Tools");

        item_options.setText("Options");
        item_options.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item_optionsActionPerformed(evt);
            }
        });
        menu_tools.add(item_options);

        menu_bar.add(menu_tools);

        menu_help.setText("Help");

        item_about.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        item_about.setText("About...");
        menu_help.add(item_about);

        item_guide.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, 0));
        item_guide.setText("Guide...");
        item_guide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item_guideActionPerformed(evt);
            }
        });
        menu_help.add(item_guide);

        menu_bar.add(menu_help);

        setJMenuBar(menu_bar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lbl_characterImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_characterImageMouseClicked
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "JPG Images", "jpg");
        chooser.setFileFilter(filter);
        int condition = chooser.showOpenDialog(null);
        if(condition == JFileChooser.APPROVE_OPTION){
            setLblImageToFile(chooser.getSelectedFile());
        }
    }//GEN-LAST:event_lbl_characterImageMouseClicked

    private void txt_speed_bonusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_speed_bonusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_speed_bonusActionPerformed

    private void txt_init_bonusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_init_bonusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_init_bonusActionPerformed

    private void defense_switch_rightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defense_switch_rightActionPerformed
        Card.changeDefenseCard(Card.INCREMENT);
        CardLayout layout = (CardLayout) deck_defense.getLayout();
        layout.show(deck_defense, Card.getCurrentDefenseCard());
        lbl_deck_defense_name.setText(Card.getCurrentDefenseCard());
    }//GEN-LAST:event_defense_switch_rightActionPerformed

    private void defense_switch_leftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defense_switch_leftActionPerformed
        Card.changeDefenseCard(Card.DECREMENT);
        CardLayout layout = (CardLayout) deck_defense.getLayout();
        layout.show(deck_defense, Card.getCurrentDefenseCard());
        lbl_deck_defense_name.setText(Card.getCurrentDefenseCard());
    }//GEN-LAST:event_defense_switch_leftActionPerformed

    private void txt_health_pointsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_health_pointsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_health_pointsActionPerformed

    private void btn_skills_rightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_skills_rightActionPerformed
        Card.changeSkillsCard(Card.INCREMENT);
        CardLayout layout = (CardLayout) deck_skillsProfs.getLayout();
        lbl_currSkilsProfsName.setText("Current Panel: ".concat(Card.getCurrentSkillsCard()));
        layout.show(deck_skillsProfs, Card.getCurrentSkillsCard());
    }//GEN-LAST:event_btn_skills_rightActionPerformed

    private void btn_skills_leftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_skills_leftActionPerformed
        Card.changeSkillsCard(Card.DECREMENT);
        CardLayout layout = (CardLayout) deck_skillsProfs.getLayout();
        lbl_currSkilsProfsName.setText("Current Panel: ".concat(Card.getCurrentSkillsCard()));
        layout.show(deck_skillsProfs, Card.getCurrentSkillsCard());
    }//GEN-LAST:event_btn_skills_leftActionPerformed

    private void item_optionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item_optionsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_item_optionsActionPerformed

    private void item_guideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item_guideActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_item_guideActionPerformed

    private void item_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item_newActionPerformed
        if(manager.authorizedToExit()){
            manager.reinitializeEnvironment();
        }
    }//GEN-LAST:event_item_newActionPerformed

    private void item_openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item_openActionPerformed
        if(manager.authorizedToExit()){
            manager.reinitializeEnvironment(manager.getFileToOpen());
        }
    }//GEN-LAST:event_item_openActionPerformed

    private void combo_levelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_levelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_levelActionPerformed

    private void swap_inventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_swap_inventoryActionPerformed
        CardLayout layout = (CardLayout) deck_spellsInventory.getLayout();
        layout.show(deck_spellsInventory, Card.INVENTORY);
        lbl_deck_spells_name.setText(Card.INVENTORY);
    }//GEN-LAST:event_swap_inventoryActionPerformed

    private void swap_spellbookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_swap_spellbookActionPerformed
        CardLayout layout = (CardLayout) deck_spellsInventory.getLayout();
        layout.show(deck_spellsInventory, Card.SPELLS);
        lbl_deck_spells_name.setText(Card.SPELLS);
    }//GEN-LAST:event_swap_spellbookActionPerformed

    private void combo_levelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combo_levelItemStateChanged
        Object item = evt.getItem();
        if(item.getClass().equals(String.class)){
            manager.validateDataChange(KEY.K_LEVEL, (String) item);
        }
    }//GEN-LAST:event_combo_levelItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bdy_attributes;
    private javax.swing.JPanel bdy_background;
    private javax.swing.JPanel bdy_charInfo;
    private javax.swing.JPanel bdy_features;
    private javax.swing.JPanel bdy_skills_swap;
    private javax.swing.JPanel bdy_spellsAndEquipment;
    private javax.swing.JButton btn_skills_left;
    private javax.swing.JButton btn_skills_right;
    private javax.swing.JComboBox<String> combo_level;
    private javax.swing.JPanel deck_defense;
    private javax.swing.JPanel deck_skillsProfs;
    private javax.swing.JPanel deck_spellsInventory;
    private javax.swing.JButton defense_switch_left;
    private javax.swing.JButton defense_switch_right;
    private javax.swing.JPanel defense_title;
    private javax.swing.JMenuItem item_about;
    private javax.swing.JMenuItem item_guide;
    private javax.swing.JMenuItem item_new;
    private javax.swing.JMenuItem item_open;
    private javax.swing.JMenuItem item_options;
    private javax.swing.JMenuItem item_save;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JLabel lbl_alignment;
    private javax.swing.JLabel lbl_attk_bonus_total;
    private javax.swing.JLabel lbl_attk_str_bonus;
    private javax.swing.JPanel lbl_background_name;
    private javax.swing.JLabel lbl_charHeight;
    private javax.swing.JLabel lbl_charInfo;
    private javax.swing.JLabel lbl_charName;
    private javax.swing.JLabel lbl_charSize;
    private javax.swing.JLabel lbl_charWeight;
    private javax.swing.JLabel lbl_characterImage;
    private javax.swing.JLabel lbl_charisma_modifier;
    private javax.swing.JLabel lbl_className;
    private javax.swing.JLabel lbl_constitutionModifier;
    private javax.swing.JLabel lbl_constitutionModifierTitle;
    private javax.swing.JLabel lbl_constitutionTitle;
    private javax.swing.JLabel lbl_currSkilsProfsName;
    private javax.swing.JLabel lbl_damage_roll;
    private javax.swing.JLabel lbl_damage_type;
    private javax.swing.JLabel lbl_damage_type1;
    private javax.swing.JLabel lbl_damage_type3;
    private javax.swing.JLabel lbl_deck_defense_name;
    private javax.swing.JLabel lbl_deck_spells_name;
    private javax.swing.JLabel lbl_deity;
    private javax.swing.JLabel lbl_dex_bonus_title;
    private javax.swing.JLabel lbl_dexterityModifier;
    private javax.swing.JLabel lbl_dexterityModifierTitle;
    private javax.swing.JLabel lbl_dexterityTitle;
    private javax.swing.JLabel lbl_dmg_bonus_total;
    private javax.swing.JLabel lbl_dmg_str_bonus;
    private javax.swing.JLabel lbl_health_points_title;
    private javax.swing.JLabel lbl_health_title;
    private javax.swing.JLabel lbl_hit_die_title;
    private javax.swing.JLabel lbl_init_bonus_title;
    private javax.swing.JLabel lbl_init_dex_bonus;
    private javax.swing.JLabel lbl_init_name;
    private javax.swing.JLabel lbl_init_total;
    private javax.swing.JLabel lbl_intelligence_modifier;
    private javax.swing.JLabel lbl_level;
    private javax.swing.JLabel lbl_offenseTitle;
    private javax.swing.JLabel lbl_panAttributes;
    private javax.swing.JLabel lbl_panBackground;
    private javax.swing.JLabel lbl_panCombat;
    private javax.swing.JLabel lbl_panFeatures;
    private javax.swing.JLabel lbl_panSkillsProfs;
    private javax.swing.JLabel lbl_panSpellsAndEquipment;
    private javax.swing.JLabel lbl_passive_perception;
    private javax.swing.JLabel lbl_passive_perception_name;
    private javax.swing.JLabel lbl_pers_bond;
    private javax.swing.JLabel lbl_pers_flaw;
    private javax.swing.JLabel lbl_pers_ideal;
    private javax.swing.JLabel lbl_pers_trait;
    private javax.swing.JLabel lbl_plus_sign;
    private javax.swing.JLabel lbl_plus_sign2;
    private javax.swing.JLabel lbl_plus_sign4;
    private javax.swing.JLabel lbl_plus_sign_3;
    private javax.swing.JLabel lbl_raceName;
    private javax.swing.JLabel lbl_speed_base;
    private javax.swing.JLabel lbl_speed_base_title;
    private javax.swing.JLabel lbl_speed_bonus_title;
    private javax.swing.JLabel lbl_speed_name;
    private javax.swing.JLabel lbl_speed_total;
    private javax.swing.JLabel lbl_strengthModifier;
    private javax.swing.JLabel lbl_strengthModifierTitle;
    private javax.swing.JLabel lbl_strengthTitle;
    private javax.swing.JLabel lbl_util_title;
    private javax.swing.JLabel lbl_weapon_name;
    private javax.swing.JLabel lbl_wisdom_modifier;
    private javax.swing.JMenuBar menu_bar;
    private javax.swing.JMenu menu_edit;
    private javax.swing.JMenu menu_file;
    private javax.swing.JMenu menu_help;
    private javax.swing.JMenu menu_tools;
    private javax.swing.JPanel pan_attributes;
    private javax.swing.JPanel pan_background;
    private javax.swing.JPanel pan_biography;
    private javax.swing.JPanel pan_charInfo;
    private javax.swing.JPanel pan_charisma;
    private javax.swing.JPanel pan_combat;
    private javax.swing.JPanel pan_combatBody;
    private javax.swing.JPanel pan_conBody;
    private javax.swing.JPanel pan_constituion;
    private javax.swing.JPanel pan_defense;
    private javax.swing.JPanel pan_dexBody;
    private javax.swing.JPanel pan_dexterity;
    private javax.swing.JPanel pan_features;
    private javax.swing.JPanel pan_health;
    private javax.swing.JPanel pan_health_body;
    private javax.swing.JPanel pan_initiative;
    private javax.swing.JPanel pan_intelligence;
    private javax.swing.JPanel pan_main;
    private javax.swing.JPanel pan_offense;
    private javax.swing.JPanel pan_offenseBody;
    private javax.swing.JPanel pan_pass_perception;
    private javax.swing.JPanel pan_photo;
    private javax.swing.JPanel pan_skills;
    private javax.swing.JPanel pan_speed;
    private javax.swing.JPanel pan_spellsInventory;
    private javax.swing.JPanel pan_strBody;
    private javax.swing.JPanel pan_strength;
    private javax.swing.JPanel pan_util_body;
    private javax.swing.JPanel pan_utility;
    private javax.swing.JPanel pan_wisdom;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JButton swap_inventory;
    private javax.swing.JButton swap_spellbook;
    private javax.swing.JTextField txt_alignment;
    private javax.swing.JTextField txt_background_name;
    private javax.swing.JTextField txt_charHeight;
    private javax.swing.JTextField txt_charName;
    private javax.swing.JTextField txt_charWeight;
    private javax.swing.JTextField txt_charisma;
    private javax.swing.JTextField txt_class;
    private javax.swing.JTextField txt_constitution;
    private javax.swing.JTextField txt_deity;
    private javax.swing.JTextField txt_dexterity;
    private javax.swing.JTextField txt_health_points;
    private javax.swing.JTextField txt_hit_die;
    private javax.swing.JTextField txt_init_bonus;
    private javax.swing.JTextField txt_intelligence;
    private javax.swing.JTextArea txt_pers_bond;
    private javax.swing.JTextArea txt_pers_flaw;
    private javax.swing.JTextArea txt_pers_ideal;
    private javax.swing.JTextArea txt_pers_trait;
    private javax.swing.JTextField txt_race;
    private javax.swing.JTextField txt_size;
    private javax.swing.JTextField txt_speed_bonus;
    private javax.swing.JTextField txt_strength;
    private javax.swing.JTextField txt_weapon_attk_bonus;
    private javax.swing.JTextField txt_weapon_damage_bonus;
    private javax.swing.JTextArea txt_weapon_damage_roll;
    private javax.swing.JTextArea txt_weapon_damage_type;
    private javax.swing.JTextArea txt_weapon_name;
    private javax.swing.JTextField txt_wisdom;
    // End of variables declaration//GEN-END:variables
    
    //Card Panels
    private DefensePanel card_defense;
    private ArmorPanel card_armor;
    private ResistancesPanel card_resistance;
    private SpellsPanel card_spells;
    private InventoryPanel card_inventory; 
    private SkillsPanel card_skills;
    private ProfsPanel card_proficiencies;
    
    private void setLblImageToFile(File selectedFile) {
        ImageIcon photo = new ImageIcon(selectedFile.getAbsolutePath());
        //https://stackoverflow.com/questions/6714045/how-to-resize-jlabel-imageicon for resizing
        Image image = photo.getImage(); // transform it 
        Image newimg = image.getScaledInstance(190, 140,  java.awt.Image.SCALE_SMOOTH); // scale it the smooth way  
        photo = new ImageIcon(newimg);  // transform it back
        lbl_characterImage.setText("");
        lbl_characterImage.setIcon(photo);

    }
    
    private void initCardsForDefense(){
        card_defense = new DefensePanel();

        card_armor = new ArmorPanel();
        card_resistance = new ResistancesPanel();
        deck_defense.add(card_defense, Card.DEFENSE);
        deck_defense.add(card_armor, Card.ARMOR);
        deck_defense.add(card_resistance, Card.RESISTANCE);
        Card.initCurrentDefenseCard();
        CardLayout layout = (CardLayout) deck_defense.getLayout();
        layout.show(deck_defense, Card.getCurrentDefenseCard());
    }
    
    private void initCardsForSkillsProfs(){
        card_skills = new SkillsPanel();
        card_proficiencies = new ProfsPanel();
        deck_skillsProfs.add(card_skills, Card.SKILLS);
        deck_skillsProfs.add(card_proficiencies, Card.PROFICIENCIES);
        Card.initCurrentSkillsProfsCard();
        CardLayout layout = (CardLayout) deck_skillsProfs.getLayout();
        layout.show(deck_skillsProfs, Card.getCurrentSkillsCard());
    }
    
    private void initCardsForSpellsInventory(){
        card_spells = new SpellsPanel();
        card_inventory = new InventoryPanel();
        deck_spellsInventory.add(card_spells, Card.SPELLS);
        deck_spellsInventory.add(card_inventory, Card.INVENTORY);
        CardLayout layout = (CardLayout) deck_spellsInventory.getLayout();
        layout.show(deck_spellsInventory, Card.SPELLS);
    }
    
    private void initComponentsForUserInterfacing(){
        //Biography
        setTextListener(txt_charName, KEY.K_CHARACTER_NAME);
        setTextListener(txt_class, KEY.K_CLASS);
        setTextListener(txt_race, KEY.K_RACE);
        setTextListener(txt_size, KEY.K_SIZE);
        setTextListener(txt_charWeight, KEY.K_WEIGHT);
        setTextListener(txt_charHeight, KEY.K_HEIGHT);
        setTextListener(txt_deity, KEY.K_DEITY);
        setTextListener(txt_alignment, KEY.K_ALIGNMENT);
        
        //Attributes
        setTextListener(txt_strength, KEY.K_STRENGTH);
        setTextListener(txt_constitution, KEY.K_CONSTITUTION);
        setTextListener(txt_dexterity, KEY.K_DEXTERITY);
        setTextListener(txt_intelligence, KEY.K_INTELLIGENCE);
        setTextListener(txt_wisdom, KEY.K_WISDOM);
        setTextListener(txt_charisma, KEY.K_CHARISMA);
        
        //Offense
        setTextListener(txt_weapon_name, KEY.K_WEAPON_NAME);
        setTextListener(txt_weapon_attk_bonus, KEY.K_WEAPON_ATTK_BONUS);
        setTextListener(txt_weapon_damage_bonus, KEY.K_WEAPON_DMG_BONUS);
        setTextListener(txt_weapon_damage_roll, KEY.K_WEAPON_DMG_ROLL);
        setTextListener(txt_weapon_damage_type, KEY.K_WEAPON_DAMAGE_TYPE);
        
        //Defense-armor
        setTextListener(card_armor.txt_description, KEY.K_ARMOR_DESCRIPTION);
        setTextListener(card_armor.txt_name, KEY.K_ARMOR_NAME);
        setTextListener(card_armor.txt_armor_class, KEY.K_ARMOR_AC);
        setTextListener(card_armor.txt_dexterity_cap, KEY.K_ARMOR_DEX_CAP);
        
        //Defense-main-defense
        setTextListener(card_defense.txt_cha_bonus, KEY.K_CHA_SAVE_BONUS);
        setTextListener(card_defense.txt_dex_bonus, KEY.K_DEX_SAVE_BONUS);
        setTextListener(card_defense.txt_wis_bonus, KEY.K_WIS_SAVE_BONUS);
        setTextListener(card_defense.txt_extra_ac_bonus, KEY.K_AC_EXTRA);
        
        //Defense-resistances
        setTextListener(card_resistance.txt_damage_resistance, KEY.K_DAMAGE_RESISTANCE);
        setTextListener(card_resistance.txt_spell_resistance, KEY.K_SPELL_RESISTANCE);

        //Utility
        setTextListener(txt_health_points, KEY.K_HEALTH_POINTS);
        setTextListener(txt_hit_die, KEY.K_HIT_DIE);
        setTextListener(txt_init_bonus, KEY.K_INIT_BONUS);
        setTextListener(txt_speed_bonus, KEY.K_SPEED_BONUS);
        
        //Background
        setTextListener(txt_background_name, KEY.K_BACKGROUND_NAME);
        setTextListener(txt_pers_trait, KEY.K_BACKGROUND_TRAIT);
        setTextListener(txt_pers_bond, KEY.K_BACKGROUND_BOND);
        setTextListener(txt_pers_ideal, KEY.K_BACKGROUND_IDEAL);
        setTextListener(txt_pers_flaw, KEY.K_BACKGROUND_FLAW);
        
        //Skills
        card_skills.initListenerForSkills(manager);
    }

    private void setTextListener(JTextComponent component, String key) {
        component.addFocusListener(new TextFocusListener(key, component.getDocument(), manager));
    }
    
    ////////////////////////////////////////////////////////////////////////////
    ///Update the Modifiers for labels.
    public void updateModifierLabel(JLabel label, int modifier){
        if(label != null){
            label.setText(Ability.modifierToString(modifier));
        }
    }
    ////////////////////////////////////////////////////////////////////////////

    public int getMOD(String key){
        if(key != null){
            JTextField field = null;
            switch(key){
                case KEY.K_STRENGTH:field=txt_strength;break;
                case KEY.K_DEXTERITY:field=txt_dexterity;break;
                case KEY.K_CONSTITUTION:field=txt_constitution;break;
                case KEY.K_INTELLIGENCE:field=txt_intelligence;break;
                case KEY.K_WISDOM:field=txt_wisdom;break;
                case KEY.K_CHARISMA:field=txt_charisma;break;
            }
            if(field != null){
                return Ability.getModifier(Integer.parseInt(field.getText()));
            }
        }
        return 0;
    }
    
    /**
     * Updates the Attribute Panel label information
     */
    public void updateAttributePanel() {      
        updateModifierLabel(lbl_strengthModifier, getMOD(KEY.K_STRENGTH));
        updateModifierLabel(lbl_dexterityModifier, getMOD(KEY.K_DEXTERITY));
        updateModifierLabel(lbl_constitutionModifier, getMOD(KEY.K_CONSTITUTION));
        updateModifierLabel(lbl_intelligence_modifier, getMOD(KEY.K_INTELLIGENCE));
        updateModifierLabel(lbl_wisdom_modifier, getMOD(KEY.K_WISDOM));
        updateModifierLabel(lbl_charisma_modifier, getMOD(KEY.K_CHARISMA));
    }
    
    public int getProficiencyBonus(){
        int level = Integer.parseInt((String) combo_level.getSelectedItem());
        if(level < 5)   return 2;
        if(level < 9)   return 3;
        if(level < 13)  return 4;
        if(level < 17)  return 5;
                        return 6;
    }

    /**
     * Updates the offensive panel information based on derived values
     */
    public void updateOffensivePanel() {
        int strength = Integer.parseInt(txt_strength.getText());
        int mod = Ability.getModifier(strength);
        int prof = getProficiencyBonus();
        lbl_attk_str_bonus.setText(Integer.toString(mod));
        lbl_dmg_str_bonus.setText(Integer.toString(mod));
        int attk_bonus, dmg_bonus;
        attk_bonus = Integer.parseInt(txt_weapon_attk_bonus.getText()) + mod + prof;
        dmg_bonus = Integer.parseInt(txt_weapon_damage_bonus.getText()) + mod + prof;
        lbl_attk_bonus_total.setText(Integer.toString(attk_bonus));
        lbl_dmg_bonus_total.setText(Integer.toString(dmg_bonus));
    }

    public void updateDefensePanel() {
        int dex_mod = getMOD(KEY.K_DEXTERITY);
        int wis_mod = getMOD(KEY.K_WISDOM);
        int cha_mod = getMOD(KEY.K_CHARISMA);
        int prof = getProficiencyBonus();
        int dex_cap = card_armor.getDEX_CAP();
        int ac = card_armor.getAC();
        card_defense.setArmorValues(dex_mod, dex_cap, ac);
        card_defense.setCommonSaves(dex_mod, wis_mod, cha_mod);
    }

    public void updateUtilityPanel() {
        int wis_mod = getMOD(KEY.K_WISDOM);
        int dex_mod = getMOD(KEY.K_DEXTERITY);
        int init_extra = Integer.parseInt(txt_init_bonus.getText());
        
        int init_total = init_extra + dex_mod;
        int passive_perception = 10 + wis_mod;  //10 is base needs refactor
        
        lbl_init_dex_bonus.setText(Integer.toString(dex_mod));
        lbl_init_total.setText(Integer.toString(init_total));
        lbl_passive_perception.setText(Integer.toString(passive_perception));
        
        int speed_bonus = Integer.parseInt(txt_speed_bonus.getText());
        int speed_total = 30 + speed_bonus;
        lbl_speed_total.setText(Integer.toString(speed_total));
    }

    public void updateSkillPanel() {
        Bundle bundle = new Bundle();
        bundle.putInteger(KEY.K_PROFICIENCY_BONUS, getProficiencyBonus());
        bundle.putInteger(KEY.K_STRENGTH, getMOD(KEY.K_STRENGTH));
        bundle.putInteger(KEY.K_DEXTERITY, getMOD(KEY.K_DEXTERITY));
        bundle.putInteger(KEY.K_CONSTITUTION, getMOD(KEY.K_CONSTITUTION));
        bundle.putInteger(KEY.K_INTELLIGENCE, getMOD(KEY.K_INTELLIGENCE));
        bundle.putInteger(KEY.K_WISDOM, getMOD(KEY.K_WISDOM));
        bundle.putInteger(KEY.K_CHARISMA, getMOD(KEY.K_CHARISMA));
        card_skills.updateSkills(bundle);
    }

    private void updateLabel(JLabel label, String text){
        
    }

}
